kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ printf "kube-proxy-windows-scripts-%d" .Release.Revision | quote }}
  namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: kube-proxy-windows
data:
  allocate_source_vip.ps1: |
    $global:ErrorActionPreference = 'Stop';
    $global:ProgressPreference = 'SilentlyContinue';

    $ActiveInstall = (Get-Content -Raw -Path C:\RKM\active).Trim()

    .\uet.exe `
      cluster `
      allocate-source-vip `
      --cni-bin-path `
      C:\RKM\$ActiveInstall\cni-plugins `
      --source-vip-file-path `
      C:\RKM\$ActiveInstall\containerd-state\kube-proxy.source-vip `
      --host-local-data-dir `
      C:\RKM\$ActiveInstall\containerd-state\host-local
    exit $LastExitCode
  kube_proxy.ps1: |
    $global:ErrorActionPreference = 'Stop';
    $global:ProgressPreference = 'SilentlyContinue';

    $ActiveInstall = (Get-Content -Raw -Path C:\RKM\active).Trim()

    $KubeProxyFolder = "C:\RKM\$ActiveInstall\kube-proxy-container\kube-proxy-${env:UET_KUBERNETES_VERSION}"

    $Downloads = @(
      @{
        Name = "kube-proxy.exe";
        Url = "https://dl.k8s.io/v${env:UET_KUBERNETES_VERSION}/bin/windows/amd64/kube-proxy.exe";
        Folder = $KubeProxyFolder;
      }
    )

    Write-Host "Downloading dependencies..."
    foreach ($Download in $Downloads) {
      if (Test-Path "$($Download.Folder)\done") {
        Write-Host "Already downloaded: $($Download.Folder)"
        continue
      }

      if (Test-Path "$($Download.Folder)") {
        Remove-Item -Force -Recurse "$($Download.Folder)"
      }
      if (Test-Path "$($Download.Folder).tmp") {
        Remove-Item -Force -Recurse "$($Download.Folder).tmp"
      }

      Write-Host "Downloading '$($Download.Name)' from '$($Download.Url)' ..."
      Invoke-WebRequest -OutFile $Download.Name $Download.Url

      Write-Host "Moving '$($Download.Name)' into '$($Download.Folder).tmp' ..."
      New-Item -ItemType Directory -Path "$($Download.Folder).tmp"
      Move-Item $Download.Name "$($Download.Folder).tmp\$($Download.Name)"

      Write-Host "Moving '$($Download.Folder).tmp' to '$($Download.Folder)' ..."
      Move-Item "$($Download.Folder).tmp" "$($Download.Folder)"
      Set-Content -Path "$($Download.Folder)\done" -Value "done"
    }

    Write-Host "Reading source VIP..."
    $SourceVip = (Get-Content -Raw -Path C:\RKM\$ActiveInstall\containerd-state\kube-proxy.source-vip).Trim()
    Write-Host "Detected source VIP as: $SourceVip"

    Write-Host "Trying to resolve own hostname to IP address..."
    while ($true) {
      $Addresses = @()
      try {
        $Addresses = ([System.Net.Dns]::GetHostEntry([System.Net.Dns]::GetHostName()).AddressList | ? { $_.AddressFamily -eq "InterNetwork" } | ? { $B = $_.GetAddressBytes(); !($B[0] -eq 127 -or $B[0] -eq 172 -or ($B[0] -eq 169 -and $B[1] -eq 254)) })
      } catch {
      }
      if ($Addresses.Length -eq 0) {
        Start-Sleep -Seconds 1
        Write-Host "Unable to resolve own hostname, retrying in 1 second..."
        continue
      }
      $env:IP = $Addresses[0].IPAddressToString
      Write-Host "Detected IP address as $env:IP"
      break
    }

    Set-Content -Path config -Value `
    @"
    kind: KubeProxyConfiguration
    apiVersion: kubeproxy.config.k8s.io/v1alpha1
    clientConnection:
      kubeconfig: "C:\\scripts\\kubeconfig"
    bindAddress: "$env:IP"
    winkernel:
      networkName: "flannel.4096"
      sourceVip: "$SourceVip"
      enableDSR: true
    featureGates:
      WinDSR: true
      WinOverlay: true
    mode: "kernelspace"
    "@

    & "$KubeProxyFolder\kube-proxy.exe" `
      --v=4 `
      --config=config
    exit $LastExitCode
  kubeconfig: |
    apiVersion: v1
    kind: Config
    clusters:
    - cluster:
        certificate-authority: "C:\\var\\run\\secrets\\kubernetes.io\\serviceaccount\\ca.crt"
        server: https://{{ .Values.cluster.controllerIp }}:6443
      name: default
    contexts:
    - context:
        cluster: default
        namespace: default
        user: default
      name: default
    current-context: default
    users:
    - name: default
      user:
        tokenFile: "C:\\var\\run\\secrets\\kubernetes.io\\serviceaccount\\token"