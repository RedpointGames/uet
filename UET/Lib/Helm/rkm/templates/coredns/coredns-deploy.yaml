kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: coredns-deploy
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: coredns-deploy
rules:
  - apiGroups: [""]
    resources:
      - secrets
      - pods
      - daemonsets
      - configmaps
      - services
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups: ["apps"]
    resources:
      - deployments
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - clusterroles
      - clusterrolebindings
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: coredns-deploy
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: coredns-deploy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns-deploy
subjects:
- kind: ServiceAccount
  name: coredns-deploy
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coredns-deploy
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: coredns-deploy
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns-deploy
subjects:
- kind: ServiceAccount
  name: coredns-deploy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns-deploy
  namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: coredns-deploy
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "coredns-deploy-%d" .Release.Revision | quote }}
  namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: coredns-deploy
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-15"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "coredns-deploy"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        rkm.redpoint.games/component: coredns-deploy
    spec:
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: coredns-deploy
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      terminationGracePeriodSeconds: 0
      priorityClassName: system-node-critical
      containers:
      - name: helm
        image: alpine/helm:3.11.1
        command:
          - "helm"
          - "--namespace=kube-system"
          - "upgrade"
          - "--install"
          - "--values"
          - "/config/values.yaml"
          - "coredns"
          - "oci://ghcr.io/coredns/charts/coredns"
        volumeMounts:
          - mountPath: /config
            name: config
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ printf "coredns-deploy-%d" .Release.Revision | quote }}
            items:
              - key: "values.yaml"
                path: "values.yaml"