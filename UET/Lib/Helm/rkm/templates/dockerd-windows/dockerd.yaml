apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dockerd-windows
  namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    rkm.redpoint.games/component: dockerd-windows
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      rkm.redpoint.games/component: dockerd-windows
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "100%"
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        rkm.redpoint.games/component: dockerd-windows
    spec:
      nodeSelector:
        kubernetes.io/os: windows
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\SYSTEM"
      hostNetwork: true
      automountServiceAccountToken: false
      initContainers:
      - name: kill-existing-process
        image: {{ printf "ghcr.io/redpointgames/uet/uet:%s-hostprocess" .Values.versions.rkm | quote }}
        command:
        - .\pwsh\pwsh.exe
        - -ExecutionPolicy
        - Bypass
        - -Command
        - "C:\\Windows\\system32\\taskkill.exe /f /im dockerd.exe; if (Test-Path C:\\ProgramData\\docker\\docker.pid) { Remove-Item -Force -Path C:\\ProgramData\\docker\\docker.pid }; exit 0"
      containers:
      - name: dockerd
        image: ghcr.io/redpointgames/uet/dockerd-hostprocess:latest
