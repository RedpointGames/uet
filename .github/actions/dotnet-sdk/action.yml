name: Install .NET SDK
description: Install the .NET SDK
inputs:
  UET_FRAMEWORK_TARGET:
    description: "The target framework."
    required: true
runs:
  using: 'composite'
  steps:
  - name: Cache .NET SDK (Windows)
    if: ${{ runner.os == 'Windows' }}
    id: cache-sdk-win
    uses: actions/cache@v4
    with:
      key: dotnet-sdk-windows-${{ inputs.UET_FRAMEWORK_TARGET }}-v2
      restore-keys: dotnet-sdk-windows-${{ inputs.UET_FRAMEWORK_TARGET }}-v2
      path: .dotnet
  - name: Cache .NET SDK (macOS)
    if: ${{ runner.os == 'macOS' }}
    id: cache-sdk-mac
    uses: actions/cache@v4
    with:
      key: dotnet-sdk-mac-${{ inputs.UET_FRAMEWORK_TARGET }}-v2
      restore-keys: dotnet-sdk-mac-${{ inputs.UET_FRAMEWORK_TARGET }}-v2
      path: .dotnet
  - name: Cache .NET SDK (Linux)
    if: ${{ runner.os == 'Linux' }}
    id: cache-sdk-linux
    uses: actions/cache@v4
    with:
      key: dotnet-sdk-linux-${{ inputs.UET_FRAMEWORK_TARGET }}-v2
      restore-keys: dotnet-sdk-linux-${{ inputs.UET_FRAMEWORK_TARGET }}-v2
      path: .dotnet
  - name: Download .NET SDK (Windows)
    if: ${{ runner.os == 'Windows' && steps.cache-sdk-win.outputs.cache-hit != 'true' }}
    shell: pwsh
    env:
      UET_FRAMEWORK_TARGET: ${{ inputs.UET_FRAMEWORK_TARGET }}
    run: |
      if (!(Test-Path .dotnet\dotnet\dotnet-extracted)) {
        if (Test-Path ".dotnet") {
          Remove-Item -Recurse -Force ".dotnet"
        }
        Write-Host "Setting up .NET SDK..."
        New-Item -ItemType Directory ".dotnet" | Out-Null
        Invoke-WebRequest https://dot.net/v1/dotnet-install.ps1 -UseBasicParsing -OutFile ".dotnet\dotnet-install.ps1"
        .\.dotnet\dotnet-install.ps1 -Channel "$($env:UET_FRAMEWORK_TARGET.Substring(3))" -InstallDir ".dotnet\dotnet"
        if ($LastExitCode -ne 0) {
          exit $LastExitCode
        }
        Set-Content -Path .dotnet\dotnet\dotnet-extracted -Value "done"
      }
  - name: Download .NET SDK (macOS)
    if: ${{ runner.os == 'macOS' && steps.cache-sdk-mac.outputs.cache-hit != 'true' }}
    shell: pwsh
    env:
      UET_FRAMEWORK_TARGET: ${{ inputs.UET_FRAMEWORK_TARGET }}
    run: |
      if (!(Test-Path .dotnet/dotnet/dotnet-extracted)) {
        if (Test-Path ".dotnet") {
          Remove-Item -Recurse -Force ".dotnet"
        }
        Write-Host "Setting up .NET SDK..."
        New-Item -ItemType Directory ".dotnet" | Out-Null
        Invoke-WebRequest https://dot.net/v1/dotnet-install.sh -UseBasicParsing -OutFile ".dotnet/dotnet-install.sh"
        chmod a+x .dotnet/dotnet-install.sh
        ./.dotnet/dotnet-install.sh --channel "$($env:UET_FRAMEWORK_TARGET.Substring(3))" --install-dir ".dotnet/dotnet"
        if ($LastExitCode -ne 0) {
          exit $LastExitCode
        }
        Set-Content -Path .dotnet/dotnet/dotnet-extracted -Value "done"
      }
  - name: Download .NET SDK (Linux)
    if: ${{ runner.os == 'Linux' && steps.cache-sdk-linux.outputs.cache-hit != 'true' }}
    shell: pwsh
    env:
      UET_FRAMEWORK_TARGET: ${{ inputs.UET_FRAMEWORK_TARGET }}
    run: |
      if (!(Test-Path .dotnet/dotnet/dotnet-extracted)) {
        if (Test-Path ".dotnet") {
          Remove-Item -Recurse -Force ".dotnet"
        }
        Write-Host "Setting up .NET SDK..."
        New-Item -ItemType Directory ".dotnet" | Out-Null
        Invoke-WebRequest https://dot.net/v1/dotnet-install.sh -UseBasicParsing -OutFile ".dotnet/dotnet-install.sh"
        chmod a+x .dotnet/dotnet-install.sh
        ./.dotnet/dotnet-install.sh --channel "$($env:UET_FRAMEWORK_TARGET.Substring(3))" --install-dir ".dotnet/dotnet"
        if ($LastExitCode -ne 0) {
          exit $LastExitCode
        }
        Set-Content -Path .dotnet/dotnet/dotnet-extracted -Value "done"
      }
  - name: Add .NET SDK to PATH (Windows)
    if: ${{ runner.os == 'Windows' }}
    shell: pwsh
    run: |
      Add-Content -Path "${env:GITHUB_PATH}" -Value ".dotnet\dotnet"
  - name: Add .NET SDK to PATH (macOS)
    if: ${{ runner.os == 'macOS' }}
    shell: pwsh
    run: |
      Add-Content -Path "${env:GITHUB_PATH}" -Value ".dotnet/dotnet"
  - name: Add .NET SDK to PATH (Linux)
    if: ${{ runner.os == 'Linux' }}
    shell: pwsh
    run: |
      Add-Content -Path "${env:GITHUB_PATH}" -Value ".dotnet/dotnet"